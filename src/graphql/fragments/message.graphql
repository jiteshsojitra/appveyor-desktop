#import "./mime-part.graphql"

fragment emailAddressFields on EmailAddress {
	address
	name
	type
	displayName
}

fragment messageFields on MessageInfo {
	id
	size
	date
	folderId
	origId
	subject
	excerpt
	conversationId
	flags
	tags
	tagNames
	revision
	changeDate
	modifiedSequence
	sortField
	emailAddresses {
		...emailAddressFields
	}
	to {
		...emailAddressFields
	}
	from {
		...emailAddressFields
	}
	cc {
		...emailAddressFields
	}
	bcc {
		...emailAddressFields
	}
	sender {
		...emailAddressFields
	}
	html
	text
	attachments {
		...mimePartFields
	}
	inlineAttachments {
		...mimePartFields
	}
	mimeParts {
		...mimePartFields
		mimeParts {
			...mimePartFields
			mimeParts {
				...mimePartFields
			}
		}
	}
	invitations {
		type
		components {
			allDay
			calendarItemId
			ciFolder
			class
			completedDateTime
			componentNum
			date
			description {
				_content
			}
			draft
			neverSent
			end {
				date
				timezone
				utc
			}
			excerpt
			freeBusy
			freeBusyActual
			htmlDescription {
				_content
			}
			isException
			isOrganizer
			location
			method
			name
			noBlob
			organizer {
				address
				name
				url
			}
			alarms {
				action
				trigger {
					relative {
						weeks
						days
						hours
						minutes
						seconds
						relatedTo
						negative
					}
				}
			}
			percentComplete
			priority
			utcRecurrenceId
			rsvp
			recurrence {
				add {
					rule {
						frequency
						interval {
							intervalCount
						}
						byday {
							wkday {
								day
								ordwk
							}
						}
						bymonthday {
							dayList
						}
						bymonth {
							monthList
						}
						bysetpos {
							poslist
						}
						count {
							number
						}
						until {
							date
						}
					}
				}
			}
			sequence
			start {
				date
				timezone
				utc
			}
			status
			uid
			x_uid
			aid
			attendees {
				role
				participationStatus
				rsvp
				address
				name
				calendarUserType
			}
		}
		replies {
 			reply {
 				participationStatus
 				attendee
 			}
 		}
	}
	share {
		content
	}
	replyType
	attributes {
		isEncrypted
		isSigned
	}
}
