version: 1.0.{build}

image:
  - Visual Studio 2017

platform:
  - x64

environment:
  nodejs_version: $env:NODEJS_VERSION
  APPVEYOR_RDP_PASSWORD: $env:APPVEYOR_RDP_PASSWORD
  REPO_DIR: $env:REPO_DIR
  DESKTOP_DIR: $env:DESKTOP_DIR
  ZIMBRA_PROXY_URL: $env:ZIMBRA_PROXY_URL
  SERVER_ADMIN_USERNAME: $env:SERVER_ADMIN_USERNAME
  SERVER_ADMIN_PASSWORD: $env:SERVER_ADMIN_PASSWORD
  TEST_SUITE: $env:TEST_SUITE
  HTML_REPORT_PATH: $env:HTML_REPORT_PATH
  TEXT_REPORT_PATH: $env:TEXT_REPORT_PATH

branches:
  only:
    - master
    
cache:
  - packages -> **\packages.config
  - node_modules

init:
  ps |
    echo '`nInitiate remote desktop connection...'
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

before_build:
  - echo '\nCheck out code and install nodejs...'
  - ps: Install-Product node $env:nodejs_version

install:
  - echo '\nDownload desktop build...'
  - ps: cd $env:DESKTOP_DIR
  - ps: New-Item -ItemType SymbolicLink -Name appveyor-desktop -Target C:\projects\appveyor-desktop
  - ps: Remove-Item .\Tools , '.\Visual Studio 2015.lnk' , '.\Visual Studio 2017.lnk' -Recurse -Force
  - ps: Start-FileDownload https://52616-126518968-gh.circle-artifacts.com/0/electron/Zimbra_X_Desktop_0.0.1_e8e01cc_20190426094759.exe?circle-token=15147e283947071011540e2f26a74bcd7b002c6f

build_script:
  - echo '\nInstall desktop build...'
  - ps: Start-Process .\Zimbra_X_Desktop_0.0.1_e8e01cc_20190426094759.exe /S -NoNewWindow -Wait -PassThru

test_script:
  - ps: cd $env:REPO_DIR
  - echo '\nBuild code using npm...'
  - ps: npm install

  - echo '\nRun desktop automation tests...'
  - ps: npm install -g --save-dev mocha spectron mochawesome

  - echo '\nConfigure test suite...'
  - ps: Add-Content environment.txt "Set-Item Env:ZIMBRA_PROXY_URL $env:ZIMBRA_PROXY_URL ; Set-Item Env:SERVER_ADMIN_USERNAME $env:SERVER_ADMIN_USERNAME ; Set-Item Env:SERVER_ADMIN_PASSWORD $env:SERVER_ADMIN_PASSWORD ; Set-Item Env:TEST_SUITE $env:TEST_SUITE ; Set-Item Env:HTML_REPORT_PATH $env:HTML_REPORT_PATH ; Set-Item Env:TEXT_REPORT_PATH $env:TEXT_REPORT_PATH ; mocha --recursive tests\spectron\tests\mail -f $env:TEST_SUITE --retries 1 --no-deprecation --reporter mochawesome --reporter-options reportDir=$env:HTML_REPORT_PATH > $env:TEXT_REPORT_PATH"
  - ps: Set-Item Env:SERVER_ADMIN_USERNAME $env:SERVER_ADMIN_USERNAME ; Set-Item Env:SERVER_ADMIN_PASSWORD $env:SERVER_ADMIN_PASSWORD ; Set-Item Env:TEST_SUITE $env:TEST_SUITE ; mocha tests/spectron/conf/configure.js -f Configure

  - echo '\nRun desktop automation tests...'
  - ps: Set-Item Env:ZIMBRA_PROXY_URL $env:ZIMBRA_PROXY_URL ; Set-Item Env:SERVER_ADMIN_USERNAME $env:SERVER_ADMIN_USERNAME ; Set-Item Env:SERVER_ADMIN_PASSWORD $env:SERVER_ADMIN_PASSWORD ; Set-Item Env:TEST_SUITE $env:TEST_SUITE ; Set-Item Env:HTML_REPORT_PATH $env:HTML_REPORT_PATH ; Set-Item Env:TEXT_REPORT_PATH $env:TEXT_REPORT_PATH ; mocha --recursive tests\spectron\tests\mail -f $env:TEST_SUITE --retries 1 --no-deprecation --reporter mochawesome --reporter-options reportDir=$env:HTML_REPORT_PATH > $env:TEXT_REPORT_PATH

artifacts:
  - path: test-reports\spectron
    name: result

on_finish:
  - echo '\nClose remote desktop connection...'
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
